/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define DEF_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

/* Behavior Settings */

/ {
    behaviors {
        &caps_word {
            continue-list = <UNDERSCORE MINUS BACKSPACE>;
        };

        &sk {
            release-after-ms = <250>;
            quick-release;
        };

        &sl {
            release-after-ms = <250>;
        };

        &lt {
            quick-tap-ms = <150>;
            global-quick-tap;
        };

        ss: sticky_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "STICK_MOD";
            #binding-cells = <1>;
            release-after-ms = <1000>;
            bindings = <&kp>;
            ignore-modifiers;
            quick-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        #define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
          combo_##NAME { \
            bindings = <BINDINGS>; \
            key-positions = <KEYPOS>; \
            layers = <LAYERS>; \
          };

        /*                KEY POSITIONS

          ╭────────────────────╮ ╭────────────────────╮
          │  0   1   2   3   4 │ │  5   6   7   8   9 │
          │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
          │     20  21  22     │ │     23  24  25     │
          ╰───────────╮ 26  27 │ │ 28  29 ╭───────────╯
                      ╰────────╯ ╰────────╯            */

         /* Letters */
        COMBO(v, &kp V, 1 2, DEF_L)
        COMBO(q, &kp Q, 1 3, DEF_L)
        COMBO(z, &kp Z, 20 21, DEF_L)

        /* Brackets */
        COMBO(left_bracket, &kp LBKT, 1 11, DEF_L NUM_L SYM_L)
        COMBO(right_bracket, &kp RBKT, 8 18, DEF_L NUM_L SYM_L)
        COMBO(left_parenthesis, &kp LPAR, 2 12, DEF_L NUM_L SYM_L)
        COMBO(right_parenthesis, &kp RPAR, 7 17, DEF_L NUM_L SYM_L)
        COMBO(left_brace, &kp LBRC, 3 13, DEF_L NUM_L SYM_L)
        COMBO(right_brace, &kp RBRC, 6 16, DEF_L NUM_L SYM_L)

        /* Convenience */
        COMBO(esc, &kp ESC, 3 4, DEF_L)
        COMBO(del, &kp DEL, 13 14, DEF_L)
        COMBO(select_all, &kp LC(A), 20 21, NAV_L)
        COMBO(repeat, &key_repeat, 24 25, DEF_L)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp W         &kp F         &kp M         &kp P         &kp G             &kp K         &kp U         &kp O         &kp Y         &kp QUOT
             &kp R         &kp S         &kp N         &kp T         &kp B             &kp J         &kp A         &kp E         &kp I         &kp H
                           &kp C         &kp L         &kp D                                         &kp X         &kp COMMA     &kp DOT
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &sl NUM_L     &lt NAV_L SPACE   &sk LSHIFT    &sl NUM_L
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
               
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp PG_UP     &kp ESC       &kp UARW      &kp TAB       &kp HOME
             &sm LGUI      &sm LALT      &sm LSHFT     &sm LCTRL     &kp LC(Z)         &kp PG_DN     &kp LARW      &kp ENTER     &kp RARW      &kp END
                           &kp LC(X)     &kp LC(C)     &kp LC(V)                                     &kp BSPC      &kp DARW      &kp DEL
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &trans        &trans            &trans        &trans
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0
             &sm LGUI      &sm LALT      &sm LSHFT     &sm LCTRL     &kp GRAVE         &kp TILDE     &kp N4        &kp N5        &kp N6        &none
                           &kp UNDER     &kp MINUS     &kp FSLH                                      &kp N1        &kp N2        &kp N3
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &trans        &trans            &kp N0        &trans
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
        // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
             &kp EXCL      &kp AT        &kp DOLLAR    &kp PERCENT   &kp CARET         &kp AMPS      &kp PIPE      &kp SEMI      &kp COLON     &kp DQT
             &kp QMARK     &kp EQUAL     &kp PLUS      &kp ASTRK     &kp GRAVE         &kp TILDE     &sm LCTRL     &sm LSHFT     &sm LALT      &sm LGUI
                           &kp UNDER     &kp MINUS     &kp FSLH                                      &kp BSLH      &kp LT        &kp GT
        // ╰─────────────┴─────────────┴─────────────╮                                                           ╭─────────────┴─────────────┴─────────────╯
                                                       &trans        &trans            &trans        &trans
        //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };
    };
};
